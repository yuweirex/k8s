apiVersion: apps/v1
kind: Deployment
metadata:
  name: penpot-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: penpot-frontend
  template:
    metadata:
      labels:
        app: penpot-frontend
    spec:
      containers:
        - name: frontend
          image: penpotapp/frontend:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: penpot-assets
              mountPath: /opt/data/assets
          env:
            - name: PENPOT_FLAGS
              value: "enable-registration enable-login-with-password"
      volumes:
        - name: penpot-assets
          persistentVolumeClaim:
            claimName: penpot-assets-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: penpot-frontend
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30083
  selector:
    app: penpot-frontend

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: penpot-assets-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/penpot-assets

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: penpot-assets-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: penpot-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: penpot-backend
  template:
    metadata:
      labels:
        app: penpot-backend
    spec:
      containers:
        - name: backend
          image: penpotapp/backend:latest
          env:
            - name: PENPOT_PUBLIC_URI
              value: "http://localhost:9001"
            - name: PENPOT_DATABASE_URI
              value: "postgresql://penpot-postgres/penpot"
            - name: PENPOT_DATABASE_USERNAME
              value: "penpot"
            - name: PENPOT_DATABASE_PASSWORD
              value: "penpot"
            - name: PENPOT_REDIS_URI
              value: "redis://penpot-redis/0"
            - name: PENPOT_ASSETS_STORAGE_BACKEND
              value: "assets-fs"
          volumeMounts:
            - name: penpot-assets
              mountPath: /opt/data/assets
      volumes:
        - name: penpot-assets
          persistentVolumeClaim:
            claimName: penpot-assets-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: penpot-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: penpot-redis
  template:
    metadata:
      labels:
        app: penpot-redis
    spec:
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: penpot-redis
spec:
  ports:
    - port: 6379
  selector:
    app: penpot-redis

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: penpot-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: penpot-postgres
  template:
    metadata:
      labels:
        app: penpot-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: penpot-postgres-storage
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_DB
              value: "penpot"
            - name: POSTGRES_USER
              value: "penpot"
            - name: POSTGRES_PASSWORD
              value: "penpot"
      volumes:
        - name: penpot-postgres-storage
          persistentVolumeClaim:
            claimName: penpot-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: penpot-postgres
spec:
  ports:
    - port: 5432
  selector:
    app: penpot-postgres

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: penpot-postgres-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/penpot-postgres

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: penpot-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
